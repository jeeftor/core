# serializer version: 1
# name: test_default_prompt[False-None]
  list([
    tuple(
      '',
      tuple(
      ),
      dict({
        'generation_config': dict({
          'max_output_tokens': 150,
          'temperature': 0.9,
          'top_k': 1,
          'top_p': 1.0,
        }),
        'model_name': 'models/gemini-pro',
        'tools': None,
      }),
    ),
    tuple(
      '().start_chat',
      tuple(
      ),
      dict({
        'history': list([
          dict({
            'parts': '''
              This smart home is controlled by Home Assistant.
              
              An overview of the areas and the devices in this smart home:
              
              Test Area:
              - Test Device (Test Model)
              
              Test Area 2:
              - Test Device 2
              - Test Device 3 (Test Model 3A)
              - Test Device 4
              - 1 (3)
              
              If the user wants to control a device, tell them to edit the AI configuration and allow access to Home Assistant.
            ''',
            'role': 'user',
          }),
          dict({
            'parts': 'Ok',
            'role': 'model',
          }),
        ]),
      }),
    ),
    tuple(
      '().start_chat().send_message_async',
      tuple(
        'hello',
      ),
      dict({
      }),
    ),
  ])
# ---
# name: test_default_prompt[False-conversation.google_generative_ai_conversation]
  list([
    tuple(
      '',
      tuple(
      ),
      dict({
        'generation_config': dict({
          'max_output_tokens': 150,
          'temperature': 0.9,
          'top_k': 1,
          'top_p': 1.0,
        }),
        'model_name': 'models/gemini-pro',
        'tools': None,
      }),
    ),
    tuple(
      '().start_chat',
      tuple(
      ),
      dict({
        'history': list([
          dict({
            'parts': '''
              This smart home is controlled by Home Assistant.
              
              An overview of the areas and the devices in this smart home:
              
              Test Area:
              - Test Device (Test Model)
              
              Test Area 2:
              - Test Device 2
              - Test Device 3 (Test Model 3A)
              - Test Device 4
              - 1 (3)
              
              If the user wants to control a device, tell them to edit the AI configuration and allow access to Home Assistant.
            ''',
            'role': 'user',
          }),
          dict({
            'parts': 'Ok',
            'role': 'model',
          }),
        ]),
      }),
    ),
    tuple(
      '().start_chat().send_message_async',
      tuple(
        'hello',
      ),
      dict({
      }),
    ),
  ])
# ---
# name: test_default_prompt[True-None]
  list([
    tuple(
      '',
      tuple(
      ),
      dict({
        'generation_config': dict({
          'max_output_tokens': 150,
          'temperature': 0.9,
          'top_k': 1,
          'top_p': 1.0,
        }),
        'model_name': 'models/gemini-pro',
        'tools': None,
      }),
    ),
    tuple(
      '().start_chat',
      tuple(
      ),
      dict({
        'history': list([
          dict({
            'parts': '''
              This smart home is controlled by Home Assistant.
              
              An overview of the areas and the devices in this smart home:
              
              Test Area:
              - Test Device (Test Model)
              
              Test Area 2:
              - Test Device 2
              - Test Device 3 (Test Model 3A)
              - Test Device 4
              - 1 (3)
              
              Call the intent tools to control the system. Just pass the name to the intent.
            ''',
            'role': 'user',
          }),
          dict({
            'parts': 'Ok',
            'role': 'model',
          }),
        ]),
      }),
    ),
    tuple(
      '().start_chat().send_message_async',
      tuple(
        'hello',
      ),
      dict({
      }),
    ),
  ])
# ---
# name: test_default_prompt[True-conversation.google_generative_ai_conversation]
  list([
    tuple(
      '',
      tuple(
      ),
      dict({
        'generation_config': dict({
          'max_output_tokens': 150,
          'temperature': 0.9,
          'top_k': 1,
          'top_p': 1.0,
        }),
        'model_name': 'models/gemini-pro',
        'tools': None,
      }),
    ),
    tuple(
      '().start_chat',
      tuple(
      ),
      dict({
        'history': list([
          dict({
            'parts': '''
              This smart home is controlled by Home Assistant.
              
              An overview of the areas and the devices in this smart home:
              
              Test Area:
              - Test Device (Test Model)
              
              Test Area 2:
              - Test Device 2
              - Test Device 3 (Test Model 3A)
              - Test Device 4
              - 1 (3)
              
              Call the intent tools to control the system. Just pass the name to the intent.
            ''',
            'role': 'user',
          }),
          dict({
            'parts': 'Ok',
            'role': 'model',
          }),
        ]),
      }),
    ),
    tuple(
      '().start_chat().send_message_async',
      tuple(
        'hello',
      ),
      dict({
      }),
    ),
  ])
# ---
